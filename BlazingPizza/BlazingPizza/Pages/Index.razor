@page "/"
@using BlazingPizza.Model
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@using BlazingPizza.Services
@inject PedidoEstado PedidoEstado

<div class="main">
    <h1>Pizzaria Paiva</h1>
    <ul class="pizza-cards">
        @if (pizzaSpecials != null)
        {
            @foreach (var special in pizzaSpecials)
            {
                <li @onclick="@(() => PedidoEstado.MostrarJanelaConfiguracaoPizza(special))" style="background-image: url('@special.ImageUrl')">
                    <div class="pizza-info">
                        <span class="title">@special.Nome</span>
                        @special.Descricao
                        <span class="price">@special.GetPrecoBaseFormatado()</span>
                    </div>
                </li>
            }
        }
    </ul>
</div>

@if (PedidoEstado.MostrarJanelaConfig)
{
    <ConfigurarPizza Pizza="PedidoEstado.ConfiguracaoPizza" 
    OnCancel="PedidoEstado.CancelarJanelaConfiguracaoPizza"
    OnConfirm="PedidoEstado.ConfirmarJanelaConfiguracaoPizza"/>
}

<div class="sidebar">
    @if (pedido.ListaPizzas.Any())
    {
        <div class="order-contents">
            <h2>Your order</h2>

            @foreach (var configuredPizza in pedido.ListaPizzas)
            {
                <div class="cart-item">
                    <div class="title">@(configuredPizza.Tamanho)" @configuredPizza.PizzaSpecial.Nome</div>
                    <div class="item-price">
                        @configuredPizza.GetPrecoTotalFormatado()
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="empty-cart">Escolha a pizza<br>para comecar</div>
    }

    <div class="order-total @(pedido.ListaPizzas.Any() ? "" : "hidden")">
        Total:
        <span class="total-price">@pedido.GetPrecoTotalFormatado()</span>
        <a href="checkout" class="@(PedidoEstado.Pedido.ListaPizzas.Count == 0 ? "btn btn-warning disabled" : "btn btn-warning")">
            Pedido >
        </a>
    </div>
</div>

@code {
    List<PizzaSpecial> pizzaSpecials = new();
    Order pedido => PedidoEstado.Pedido;

    protected override async Task OnInitializedAsync()
    {
        pizzaSpecials = await HttpClient.GetFromJsonAsync<List<PizzaSpecial>>(NavigationManager.BaseUri + "pizzas");
    }
}
		